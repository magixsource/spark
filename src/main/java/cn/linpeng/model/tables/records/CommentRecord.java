/**
 * This class is generated by jOOQ
 */
package cn.linpeng.model.tables.records;


import cn.linpeng.model.tables.Comment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record5<Integer, Integer, String, Integer, Timestamp> {

	private static final long serialVersionUID = -800665673;

	/**
	 * Setter for <code>xcms.comment.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>xcms.comment.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>xcms.comment.post_id</code>.
	 */
	public void setPostId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>xcms.comment.post_id</code>.
	 */
	public Integer getPostId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>xcms.comment.content</code>.
	 */
	public void setContent(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>xcms.comment.content</code>.
	 */
	public String getContent() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>xcms.comment.author</code>.
	 */
	public void setAuthor(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>xcms.comment.author</code>.
	 */
	public Integer getAuthor() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>xcms.comment.create_time</code>.
	 */
	public void setCreateTime(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>xcms.comment.create_time</code>.
	 */
	public Timestamp getCreateTime() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, Integer, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, Integer, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Comment.COMMENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Comment.COMMENT.POST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Comment.COMMENT.CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Comment.COMMENT.AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Comment.COMMENT.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPostId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value2(Integer value) {
		setPostId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value3(String value) {
		setContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value4(Integer value) {
		setAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value5(Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord values(Integer value1, Integer value2, String value3, Integer value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CommentRecord
	 */
	public CommentRecord() {
		super(Comment.COMMENT);
	}

	/**
	 * Create a detached, initialised CommentRecord
	 */
	public CommentRecord(Integer id, Integer postId, String content, Integer author, Timestamp createTime) {
		super(Comment.COMMENT);

		setValue(0, id);
		setValue(1, postId);
		setValue(2, content);
		setValue(3, author);
		setValue(4, createTime);
	}
}
